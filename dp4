Given an array arr[] of length N and an integer X, the task is to find the number of subsets with a sum equal to X.

Examples: 

Input: arr[] = {1, 2, 3, 3}, X = 6 
Output: 3 
All the possible subsets are {1, 2, 3}, 
{1, 2, 3} and {3, 3}

Input: arr[] = {1, 1, 1, 1}, X = 1 
Output: 4 





CODE: TOP-DOWN APPPROACH

#include <iostream>

using namespace std;

int main() {
    int n,sum,a[100],dp[100][100];
    cin>>n;
    for(int i=0;i<n;i++)
    {
        cin>>a[i];
    }
    cin>>sum;
    for(int i=1;i<=n;i++)
    {
        dp[i][0]=1;
    }
    for(int i=1;i<=sum;i++)
    {
        dp[0][sum]=0;
    }
    for(int i=1;i<=n;i++)
    {
        for(int j=1;j<=sum;j++)
        {
            if(a[i-1]<=j)
            {
                dp[i][j]=dp[i-1][j]+dp[i-1][j-a[i-1]];
            }
            else
            {
                dp[i][j]=dp[i-1][j-1];
            }
        }
    }
    cout<<dp[n][sum] << endl;
}
